<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" type="image/png" sizes="16x16" href="~/plugins/images/favicon.png">
    <title>Ample Admin Template - The Ultimate Multipurpose admin template</title>
    <!-- Bootstrap Core CSS -->
    <!-- Menu CSS -->
    <link href="~/plugins/bower_components/sidebar-nav/dist/sidebar-nav.min.css" rel="stylesheet">
    <!-- toast CSS -->
    <link href="~/plugins/bower_components/toast-master/css/jquery.toast.css" rel="stylesheet">
    <!-- morris CSS -->
    <link href="~/plugins/bower_components/morrisjs/morris.css" rel="stylesheet">
    <!-- chartist CSS -->
    <link href="~/plugins/bower_components/chartist-js/dist/chartist.min.css" rel="stylesheet">
    <link href="~/plugins/bower_components/chartist-plugin-tooltip-master/dist/chartist-plugin-tooltip.css" rel="stylesheet">
    <!-- animation CSS -->
    <link href="~/css/animate.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="~/css/style.css" rel="stylesheet">
    <!-- color CSS -->
    <link href="~/css/colors/default.css" id="theme" rel="stylesheet">
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--===============================================================================================-->
    <!--===============================================================================================-->
    <link href="~/library/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    <!--===============================================================================================-->

</head>
<body class="fix-header">
    @*<div class="preloader">
            <svg class="circular" viewBox="25 25 50 50">
                <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10" />
            </svg>
        </div>*@
    <!-- ============================================================== -->
    <!-- Wrapper -->
    <!-- ============================================================== -->
    <div id="wrapper">
        <!-- ============================================================== -->
        <!-- Topbar header - style you can find in pages.scss -->
        <!-- ============================================================== -->
        <nav class="navbar navbar-default navbar-static-top m-0 p-0">
            <div class="navbar-header">
                <!-- /Logo -->
                <ul class="nav navbar-top-links navbar-right pull-right">
                    <li>
                        <a class="profile-pic" href="#">
                            <b class="hidden-xs m-r-15">Adminstrator</b>
                            <img src="~/plugins/images/users/varun.jpg" alt="user-img" width="36" class="rounded">
                        </a>
                    </li>
                    <button class="btn btn-primary pull-right ml-3" id="btnLogout" style="width:120px"> Log Out</button>
                </ul>
            </div>
            <!-- /.navbar-header -->
            <!-- /.navbar-top-links -->
            <!-- /.navbar-static-side -->
        </nav>
        <!-- End Top Navigation -->
        <!-- ============================================================== -->
        <!-- Left Sidebar - style you can find in sidebar.scss  -->
        <!-- ============================================================== -->
        <div class="navbar-default sidebar" role="navigation">
            <div class="sidebar-nav slimscrollsidebar">
                <div class="sidebar-head">
                    <h3><span class="fa-fw open-close"><i class="ti-close ti-menu"></i></span> <span class="hide-menu">Navigation</span></h3>
                </div>
                <ul class="nav" id="side-menu">
                    @*<li style="padding: 70px 0 0;">
            <a href="dashboard.html" class="waves-effect"><i class="fa fa-clock-o fa-fw" aria-hidden="true"></i>Dashboard</a>
        </li>*@

                    @*<li>
            <a href="basic-table.html" class="waves-effect"><i class="fa fa-table fa-fw" aria-hidden="true"></i>Adminstrators</a>
        </li>*@
                    <li style="padding: 70px 0 0;">
                        <a href="https://localhost:5001/Dashboard/" class="waves-effect"><i class="fa fa-clock-o fa-fw" aria-hidden="true"></i>Dashboard</a>
                    </li>
                    <li>
                        <a href="https://localhost:5001/Dashboard/Student/" class="waves-effect"><i class="fa fa-clock-o fa-fw" aria-hidden="true"></i>Students</a>
                    </li>
                    <li>
                        <a href="https://localhost:5001/Dashboard/Course/" class="waves-effect"><i class="fa fa-table fa-fw" aria-hidden="true"></i>Courses</a>
                    </li>
                    <li>
                        <a href="https://localhost:5001/Dashboard/Subject/" class="waves-effect"><i class="fa fa-font fa-fw" aria-hidden="true"></i>Subjects</a>
                    </li>
                </ul>
            </div>

        </div>
        <!-- ============================================================== -->
        <!-- End Left Sidebar -->
        <!-- ============================================================== -->
        <!-- ============================================================== -->
        <!-- Page Content -->
        <!-- ============================================================== -->
        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row bg-title">
                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
                        <h4 class="page-title">Student</h4>
                    </div>
                    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
                        <ol class="breadcrumb">
                            <li><a href="#">Administrator</a></li>
                        </ol>
                    </div>
                    <!-- /.col-lg-12 -->
                </div>

                <!-- ============================================================== -->
                <!-- table -->
                <!-- ============================================================== -->
                <div class="row">
                    <div class="col-md-12 col-lg-12 col-sm-12">
                        <div class="white-box">
                            <div class="col-lg-12">
                                <h4 class="font-weight-light my-2">Manage Students</h4>
                                
                            <div class="alert shadow" id="alert" role="alert" hidden>
                                <h5 class="alert-heading" id="alert-heading">Loading...</h5><hr>
                                <small class="" id="alert-body">Loading..</small>
                            </div>
                            <div class="table-responsive" id="studentTable">
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control" placeholder="Search student..." aria-label="Recipient's username" aria-describedby="button-addon2">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button" id="btnSearch">Search</button>
                                    </div>
                                </div>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            @*<th>#</th>*@
                                            <th>NAME</th>
                                            <th>COURSE</th>
                                            <th>USERNAME</th>
                                            <th>GENDER</th>
                                            <th>SELECTED</th>
                                        </tr>

                                    </thead>
                                    <tbody id="tableItems"></tbody>
                                </table>

                                <div>
                                    <button type="submit" class="btn btn-primary pull-left mr-3" id="btnCreateStudent" style="width:95px">+Student</button>
                                    <button class="btn btn-primary pull-right ml-3" id="btnDeleteMulti" style="width:80px" disabled>Delete</button>
                                    <button class="btn btn-primary pull-right ml-3" id="btnView" style="width:80px" disabled>View</button>
                                </div>

                            </div>
                            <div class="row" id="studendForm" hidden>
                                <!-- .col -->
                                <div class="col-md-12 col-lg-12 col-sm-12">
                                    <form id="form">
                                        <hr />
                                        <div class="form-group row" hidden>
                                            <label for="inputEmail3" class="col-sm-2 col-form-label">ID</label>
                                            <div class="col-sm-10">
                                                <input type="text" id="inputEmail3" disabled class="form-control disabledItem" placeholder="ID" value="" rel="id" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputEmail3" class="col-sm-2 col-form-label">FirstName</label>
                                            <div class="col-sm-10">
                                                <input type="email" id="inputEmail3" required disabled class="form-control disabledItem" placeholder="FirstName" value="" rel="firstName">
                                                <div class="invalid-feedback">
                                                    Invalid Value.
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputEmail3" class="col-sm-2 col-form-label">LastName</label>
                                            <div class="col-sm-10">
                                                <input type="email" id="inputEmail3" required disabled class="form-control disabledItem" placeholder="LastName" value="" rel="lastName">
                                                <div class="invalid-feedback">
                                                    Invalid Value.
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputEmail3" class="col-sm-2 col-form-label">Email</label>
                                            <div class="col-sm-10">
                                                <input type="email" id="inputEmail3" required disabled class="form-control disabledItem" placeholder="Email" value="" rel="email">
                                                <div class="invalid-feedback">
                                                    Invalid Value.
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputEmail3" class="col-sm-2 col-form-label">UserName</label>
                                            <div class="col-sm-10">
                                                <input type="email" id="inputEmail3" required disabled class="form-control disabledItem" placeholder="UserName" value="" rel="userName">
                                                <div class="invalid-feedback">
                                                    Invalid Value.
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputEmail3" class="col-sm-2 col-form-label">Gender</label>
                                            <div class="col-sm-10">
                                                <select id="disabledItem" disabled class="form-control disabledItem" required rel="gender">
                                                    <option value="" disabled selected>Choose Gender</option>
                                                    <option value="Male">Male</option>
                                                    <option value="Female">Female</option>
                                                </select>
                                                <div class="invalid-feedback">Invalid Value.</div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputEmail3" class="col-sm-2 col-form-label">Course</label>
                                            <div class="col-sm-10">
                                                <select id="disabledItem" disabled class="form-control disabledItem" required rel="course">
                                                    <option value="" disabled selected>Choose Course</option>

                                                </select>
                                                <div class="invalid-feedback">Invalid Value.</div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputPassword3" class="col-sm-2 col-form-label">Password</label>
                                            <div class="col-sm-10">
                                                <input type="password" id="inputPassword3" required disabled class="form-control disabledItem" placeholder="Password" value="" rel="password">
                                                <div class="invalid-feedback">
                                                    Invalid Value.
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="inputPassword3" class="col-sm-2 col-form-label">Confirm Password</label>
                                            <div class="col-sm-10">
                                                <input type="password" id="inputPassword3" required disabled class="form-control disabledItem" placeholder="Confirm Password" value="" rel="comfirmPassword">
                                                <div class="invalid-feedback">
                                                    Value not match.
                                                </div>
                                            </div>
                                        </div>

                                        <hr />
                                        <div class="form-group row">
                                            <div class="col-sm-12">
                                                @*<button class="btn btn-primary pull-right ml-3" id="btnDelete" style="width:80px">Delete</button>*@
                                                <button class="btn btn-primary pull-right ml-3" id="btnBack" style="width:80px">Back</button>
                                                <button class="btn btn-primary pull-right ml-3" id="btnUpdate" style="width:80px" disabled>Update</button>
                                                <button class="btn btn-primary pull-right ml-3" id="btnEdit" style="width:80px">Edit</button>
                                                <button type="submit" class="btn btn-primary pull-left mr-3" id="btnCreate" style="width:80px">New</button>
                                            </div>
                                        </div>
                                    </form>

                                </div>
                            </div>
                            <div class="text-center my-2" id="spinner" hidden>
                                <div class="spinner-border" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>

                            <!-- /.col -->
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Page Content -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- End Wrapper -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- All Jquery -->
    <!-- ============================================================== -->
    <script src="~/vendor/jquery/jquery-3.2.1.min.js"></script>
    <!-- Bootstrap Core JavaScript -->
    <script src="~/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- Menu Plugin JavaScript -->
    <script src="~/plugins/bower_components/sidebar-nav/dist/sidebar-nav.min.js"></script>
    <!--slimscroll JavaScript -->
    <script src="~/js/jquery.slimscroll.js"></script>
    <!--Wave Effects -->
    <script src="~/js/waves.js"></script>
    <!--Counter js -->
    <script src="~/plugins/bower_components/waypoints/lib/jquery.waypoints.js"></script>
    <script src="~/plugins/bower_components/counterup/jquery.counterup.min.js"></script>
    <!-- chartist chart -->
    <script src="~/plugins/bower_components/chartist-js/dist/chartist.min.js"></script>
    <script src="~/plugins/bower_components/chartist-plugin-tooltip-master/dist/chartist-plugin-tooltip.min.js"></script>
    <!-- Sparkline chart JavaScript -->
    <script src="~/plugins/bower_components/jquery-sparkline/jquery.sparkline.min.js"></script>
    <!-- Custom Theme JavaScript -->
    <script src="~/js/custom.min.js"></script>
    <script src="~/js/dashboard1.js"></script>
    <script src="~/plugins/bower_components/toast-master/js/jquery.toast.js"></script>

    <script>
        $(document).ready(function () {
            if (localStorage.getItem('token') == null) {
                window.location.replace("https://localhost:5001/Login")
            } 

            var students = [];
            var courseOptions = "";

            function tableList(data, course) {
                if (data.course == null) {
                    data.course = "Choose Course"
                } else if (typeof (data.course) === 'object') {
                    data.course = data.course.name
                }

                return data = "<tr data-id=" + data.id + ">"
                    //+ "<td>" + data.loopID + "</td>"

                    + "<td>"
                    + "<div class='remodify' rel='textDiv'>" + data.firstName + " " + data.lastName + "</div>"
                    + "<div class='input-group input-group-sm remodify' rel='inputDiv' hidden>"
                    + "<input type='text' class='form-control' placeholder='New value' style='width:70px' rel='name' value='" + data.firstName + " " + data.lastName + "'>"
                    + "<div class='input-group-append'>"
                    + "<button class='btn btn-outline-secondary save' type='button'>Save</button>"
                    + "</div>"
                    + "</td>"

                    + "<td>"
                    + "<div class='remodify'>" + data.course + "</div>"
                    + "<div class='input-group input-group-sm remodify' rel='inputDiv' hidden>"
                    + "<select class='custom-select' style='width:70px' rel='course'>"
                    + "<option value='' disabled selected>Choose Course</option>"
                    + course
                    + "</select>"
                    + "<div class='input-group-append'>"
                    + "<button class='btn btn-outline-secondary save' type='button'>Save</button>"
                    + "</div>"
                    + "</div>"
                    + "</td>"


                    + "<td>"
                    + "<div class='remodify' rel='textDiv'>" + data.userName + "</div>"
                    + "<div class='input-group input-group-sm remodify' rel='inputDiv' hidden>"
                    + "<input type='text' class='form-control' placeholder='New value' style='width:70px' rel='userName' value='" + data.userName + " '>"
                    + "<div class='input-group-append'>"
                    + "<button class='btn btn-outline-secondary save' type='button'>Save</button>"
                    + "</div>"
                    + "</td>"


                    + "<td>"
                    + "<div class='remodify'>" + data.gender + "</div>"
                    + "<div class='input-group input-group-sm remodify' rel='inputDiv' hidden>"
                    + "<select class='custom-select' style='width:70px' rel='gender'>"
                    + "<option value='' disabled selected>Choose Gender</option>"
                    + "<option value='Male'>Male</option>"
                    + "<option value='Female'>Female</option>"
                    + "</select>"
                    + "<div class='input-group-append'>"
                    + "<button class='btn btn-outline-secondary save' type='button'>Save</button>"
                    + "</div>"
                    + "</div>"
                    + "</td>"


                    + "<td>"
                    + "<div class='custom-control custom-checkbox'>"
                    + "<input class='form-check-input position-static' type='checkbox' id='blankCheckbox' value='option1' aria-label='...' data-id='" + data.id + "'>"
                    + "</div>"
                    + "</td>"
                    + "</tr>";
            }
            function findContentById(data) {
                var foundValue = {};
                $.each(students, function (index, value) {
                    if (value.id == data) { foundValue = value }
                })
                return foundValue;
            }
            function addCourseToStudent(data) {
                $.ajax({
                    type: "POST",
                    url: "https://localhost:44380/api/v1/students/courses/",
                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    dataType: "json",
                    success: function (datas) {
                        console.log(datas);
                    },
                    error: function (data) {
                        console.log(data)
                        alert("Server is off")
                        console.log('bad')
                    }
                });
            }

            function updateCurrentStudent(data) {

                $.ajax({
                    type: "PUT",
                    url: "https://localhost:44380/api/v1/students/" + data.id,
                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                        $spinner.prop("hidden", true);
                        console.log("jj");
                    },
                    error: function (data) {
                        $spinner.prop("hidden", true);
                        console.log('bad')
                    },
                    complete: function (jqxhr, txt_status) {
                        console.log(jqxhr);
                        if (jqxhr.status == 200) {
                            console.log('how')
                            var addcourrse2student = { "StudentId": data.id, "CourseId": data.courseId };
                            console.log(addcourrse2student)
                            if (addcourrse2student.CourseId != null)
                                addCourseToStudent(addcourrse2student)
                        }
                    }
                });

            };
            function loadData(courses) {
                $.ajax({
                    type: "GET",
                    url: "https://localhost:44380/api/v1/students",
                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        $spinner.prop("hidden", true);
                        console.log(data);

                        var modifyStudent = $.each(data, function (index, data) {
                            data.loopID = index + 1
                        })

                        console.log(modifyStudent);
                        students = modifyStudent;
                        $.each(students, function (key, value) {
                            var data = tableList(value, courses);
                            $studentsTable.append(data);
                        });

                        $studentsTable.find("input[type='checkbox']").on('click', function () {
                            if ($(this).prop("checked")) {
                                if ($("input[type='checkbox']:checked").length == 1) {
                                    $btnView.prop('disabled', false);
                                } else {
                                    $btnView.prop('disabled', true);
                                }
                                $btnDeleteMulti.prop('disabled', false);
                            } else {
                                console.log($("input[type='checkbox']:checked").length)
                                if ($("input[type='checkbox']:checked").length == 0) {
                                    $btnDeleteMulti.prop('disabled', true);
                                    $btnView.prop('disabled', true);
                                }
                                else if ($("input[type='checkbox']:checked").length == 1) {
                                    $btnView.prop('disabled', false);
                                }
                            }
                        })

                        $studentsTable.find('.save').on("click", function (e) {
                            e.preventDefault();
                            var $inputDiv = $(this).parent().parent();
                            var $inputElement = $(this).parent().siblings().first();
                            $inputDiv.prop('hidden', true);
                            $(this).parent().parent().siblings().first().prop('hidden', false);
                            var inputValue = "";
                            if ($inputElement.prop('tagName') == "SELECT") {
                                inputValue = $inputElement.children().filter(':selected').val()
                            } else {
                                inputValue = $inputElement.val();
                            }
                            if (inputValue != "") {
                                if ($inputElement.prop('tagName') == "SELECT") {
                                    $inputDiv.siblings().first().html($inputElement.children().filter(':selected').text());
                                } else {
                                    $inputDiv.siblings().first().html(inputValue);
                                }
                                var result = findContentById($inputDiv.parent().parent().data("id"));
                                console.log(result)
                                if ($inputElement.attr('rel') == 'name') {
                                    var names = inputValue.split(' ');
                                    result.firstName = names[0];
                                    if (names[1] == undefined) { result.lastName = "" } else { result.lastName = names[1] };
                                } else {
                                    var relValue = $inputElement.attr('rel');
                                    if (relValue == "course") {
                                        result.courseId = inputValue.trim();
                                        result.course = $inputElement.children().filter(':selected').text();
                                    } else {
                                        result[relValue] = inputValue.trim();
                                    }
                                }
                                console.log(result)
                                updateCurrentStudent(result)
                            }
                        })

                        $studentsTable.find('.remodify').on("click", function (e) {
                            e.preventDefault();
                            if ($(this).attr("rel") != "inputDiv") {
                                $(this).prop('hidden', true);
                                $(this).siblings().first().prop('hidden', false);
                            }
                        })
                    },
                    error: function (data) {
                        alert("Server is off")
                        console.log('bad')
                    }
                });
            }
            function getAllCourses() {
                $spinner.prop("hidden", false);
                $.ajax({
                    type: "GET",
                    url: "https://localhost:44380/api/v1/courses",
                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        $.each(data, function (index, value) {
                            courseOptions += "<option value='" + value.courseId + "'>" + value.name + "</option>"
                        })
                        //i have relook into this
                        $form.find('.disabledItem[rel="course"]').append(courseOptions);
                        loadData(courseOptions);
                    },
                    error: function (data) {
                        if (data.status == "401") {
                            window.location.replace("https://localhost:5001/Login");
                        }
                        console.log('bad')
                    }
                });
            };
            //i have recheck the update button and make sure i get back a user who have being created including id(more importantly)
            function createCurrentStudent(data) {

                $.ajax({
                    type: "POST",
                    url: "https://localhost:44380/api/v1/students/register",
                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    dataType: "json",
                    success: function (succesData) {
                        console.log(succesData);
                        $btnCreate.html("New");
                        $btnEdit.prop("disabled", true);
                        $btnUpdate.prop("disabled", true);
                        $spinner.prop("hidden", true);
                        $alert.prop("hidden", true);
                        $alert.removeClass("alert-danger").addClass("alert-success");
                        $alert.find("#alert-heading").html("Success");
                        $alert.find("#alert-body").html("Registration successfully completed.");
                        $alert.prop("hidden", false);

                        var data = tableList(succesData.user, courseOptions);
                        students.push(succesData.user);
                        $studentsTable.append(data);
                        console.log(data)

                        $studentsTable.find("input[type='checkbox']").on('click', function () {
                            if ($(this).prop("checked")) {
                                if ($("input[type='checkbox']:checked").length == 1) {
                                    $btnView.prop('disabled', false);
                                } else {
                                    $btnView.prop('disabled', true);
                                }
                                $btnDeleteMulti.prop('disabled', false);
                            } else {
                                console.log($("input[type='checkbox']:checked").length)
                                if ($("input[type='checkbox']:checked").length == 0) {
                                    $btnDeleteMulti.prop('disabled', true);
                                    $btnView.prop('disabled', true);
                                }
                                else if ($("input[type='checkbox']:checked").length == 1) {
                                    $btnView.prop('disabled', false);
                                }
                            }
                        })

                        $studentsTable.find('.save').on("click", function (e) {
                            e.preventDefault();
                            var $inputDiv = $(this).parent().parent();
                            var $inputElement = $(this).parent().siblings().first();
                            $inputDiv.prop('hidden', true);
                            $(this).parent().parent().siblings().first().prop('hidden', false);
                            var inputValue = "";
                            if ($inputElement.prop('tagName') == "SELECT") {
                                inputValue = $inputElement.children().filter(':selected').val()
                            } else {
                                inputValue = $inputElement.val();
                            }
                            if (inputValue != "") {
                                if ($inputElement.prop('tagName') == "SELECT") {
                                    $inputDiv.siblings().first().html($inputElement.children().filter(':selected').text());
                                } else {
                                    $inputDiv.siblings().first().html(inputValue);
                                }
                                var result = findContentById($inputDiv.parent().parent().data("id"));

                                console.log(result)
                                if ($inputElement.attr('rel') == 'name') {
                                    var names = inputValue.split(' ');
                                    result.firstName = names[0];
                                    if (names[1] == undefined) { result.lastName = "" } else { result.lastName = names[1] };
                                } else {
                                    var relValue = $inputElement.attr('rel');
                                    if (relValue == "course") {
                                        result.courseId = inputValue.trim();
                                        result.course = $inputElement.children().filter(':selected').text();
                                    } else {
                                        result[relValue] = inputValue.trim();
                                    }
                                }
                                console.log(result)
                                updateCurrentStudent(result)
                            }
                        })

                        $studentsTable.find('.remodify').on("click", function (e) {
                            e.preventDefault();
                            if ($(this).attr("rel") != "inputDiv") {
                                $(this).prop('hidden', true);
                                $(this).siblings().first().prop('hidden', false);
                            }
                        })

                        console.log(data);
                    },
                    error: function (data) {
                        console.log(data)
                        $spinner.prop("hidden", true);
                        var errors = data.responseJSON.errors.join(" </br> ");
                        $alert.addClass("alert-danger");
                        $alert.find("#alert-heading").html("Error!");
                        $alert.find("#alert-body").html(errors);
                        $alert.prop("hidden", false);
                        console.log('bad')
                    },
                    complete: function (jqxhr, txt_status) {
                        console.log(jqxhr);
                        if (jqxhr.status == 200) {
                            console.log('how')
                        }
                    }
                });

            };

            function deleteStudent(data) {
                $.ajax({
                    type: "DELETE",
                    url: "https://localhost:44380/api/v1/students/" + data,
                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                    },
                    error: function (data) {
                        console.log(data)
                        alert("Server is off")
                        console.log('bad')
                    }
                });
            }

            var $studentsTable = $("#tableItems");
            var $btnDeleteMulti = $("#btnDeleteMulti");
            var $btnView = $("#btnView");
            var $form = $("#form");
            var $spinner = $("#spinner");
            var $studentTable = $("#studentTable");
            var $studendForm = $("#studendForm");
            var $alert = $("#alert");
            var $btnCreateStudent = $("#btnCreateStudent");
            var $btnSearch = $("#btnSearch");

            var $form = $("#form");
            var $btnEdit = $("#btnEdit");
            var $btnUpdate = $("#btnUpdate");
            var $btnDelete = $("#btnDelete");
            var $btnCreate = $("#btnCreate");
            var $btnBack = $("#btnBack");


            getAllCourses()

            $btnDeleteMulti.on("click", function (e) {
                e.preventDefault();
                var checked = $studentsTable.find("input[type='checkbox']:checked");
                if (checked.length > 0) {
                    checked.each(function () {
                        var data = $(this).data('id');
                        deleteStudent(data);
                        console.log(data);
                        $(this).closest("tr").remove();
                    })
                    $btnView.prop("disabled", true)
                    $(this).prop("disabled", true)
                } else {
                    alert('notSelected')
                }
            })

            $btnView.on("click", function (e) {
                e.preventDefault();
                $alert.prop("hidden", true);
                var $firstChecked = $studentsTable.find("input[type='checkbox']:checked").first();
                var id = $firstChecked.data('id');
                $studentTable.prop("hidden", true);
                $studendForm.prop("hidden", false)

                var data = findContentById(id);
                console.log(data)
                $form.find('.disabledItem').each(function () {
                    var relValue = $(this).attr("rel");
                    $form.find('.disabledItem[rel=' + relValue + ']').removeClass("is-invalid");
                    if (relValue == "course") {
                        $form.find('.disabledItem[rel="course"]').parent().parent().show();
                        $form.find('.disabledItem[rel="course"]').val(data["courseId"]).change();
                    } else {
                        $form.find('.disabledItem[rel=' + relValue + ']').val(data[relValue]).change();
                    }
                })
            })

            $btnBack.on("click", function (e) {
                e.preventDefault();
                $studendForm.prop("hidden", true)
                $studentTable.prop("hidden", false);
                $alert.prop("hidden", true);
            })

            $btnCreateStudent.on("click", function (e) {
                e.preventDefault();

                $studentTable.prop("hidden", true);
                $studendForm.prop("hidden", false)

            })

            $btnDelete.on('click', function (e) {
                e.preventDefault();
                var firstInputRelValue = $form.find('.disabledItem').first().val();
                console.log(firstInputRelValue);
                deleteStudent(firstInputRelValue)
            })

            $btnEdit.on('click', function (e) {
                e.preventDefault();
                $form.find('.disabledItem').each(function () {
                    $(this).prop("disabled", false);
                })
                $btnUpdate.prop("disabled", false);
                $btnDelete.prop("disabled", false);
                $(this).prop("disabled", true)
            })

            var updateStudent = {};
            $btnUpdate.on('click', function (e) {
                e.preventDefault();
                $spinner.prop("hidden", false);
                $alert.prop("hidden", true);
                //i will check if everything is not empty
                $form.find('.disabledItem').each(function () {
                    var key = $(this).attr("rel");
                    if (($(this).is('input')) && ($(this).val() != "")) {
                        var value = { "value": $(this).val(), "pass": true };
                        updateStudent[key] = value;
                    } else if (($(this).is('select')) && ($(this).children().filter(':selected').val() != "")) {
                        //i have edit this part for all entities
                        if (key == "course") {
                            var valueforId = { "value": $(this).children().filter(':selected').val(), "pass": true };
                            updateStudent['courseId'] = valueforId;
                            var value = { "value": $(this).children().filter(':selected').text(), "pass": true };
                            updateStudent['course'] = value;
                        } else {
                            var value = { "value": $(this).children().filter(':selected').val(), "pass": true };
                            updateStudent[key] = value;
                        }

                    } else {
                        var value = { "value": "", "pass": false };
                        updateStudent[key] = value;
                    };
                })

                var error = false;
                $.each(updateStudent, function (key, value) {
                    if ((key != "password") && (key != "comfirmPassword")) {
                        if (value["pass"] == false) {
                            $form.find('.disabledItem[rel=' + key + ']').addClass("is-invalid");
                            error = true;
                        }
                        else {
                            $form.find('.disabledItem[rel=' + key + ']').removeClass("is-invalid");
                        }
                    }
                })

                if (updateStudent.password.value != updateStudent.comfirmPassword.value) {
                    $form.find('.disabledItem[rel="comfirmPassword"]').addClass("is-invalid");
                } else if ((updateStudent.password.value == updateStudent.comfirmPassword.value) && error == false) {
                    $form.find('.disabledItem[rel="comfirmPassword"]').removeClass("is-invalid");
                    $(this).prop("disabled", true);
                    $btnDelete.prop("disabled", true);
                    $btnEdit.prop("disabled", false);
                    $form.find('.disabledItem').each(function () {
                        $(this).prop("disabled", true);
                    })
                    Object.keys(updateStudent).map(function (key, index) {
                        updateStudent[key] = updateStudent[key].value;
                    })
                    console.log(updateStudent);
                    updateCurrentStudent(updateStudent);
                } else {
                    console.log(updateStudent);
                    console.log('no id')
                }

            })

            var newStudent = {};
            $btnCreate.on('click', function (e) {
                e.preventDefault();
                $alert.prop("hidden", true);
                if ($(this).html() == "New") {
                    $(this).html("Create");
                    $form.find('.disabledItem').each(function () {
                        $form.find('.disabledItem[rel="course"]').parent().parent().hide();
                        $(this).val("");
                        $(this).prop("disabled", false);

                    })
                    $btnUpdate.prop("disabled", true);
                    $btnDelete.prop("disabled", true);
                    $btnEdit.prop("disabled", true);
                } else {

                    //i will check if everything is not empty
                    $form.find('.disabledItem').each(function () {
                        var key = $(this).attr("rel");
                        if (($(this).is('input')) && ($(this).val() != "")) {
                            var value = { "value": $(this).val(), "pass": true };
                            newStudent[key] = value;
                        } else if (($(this).is('select')) && ($(this).children().filter(':selected').val() != "")) {
                            //i have edit this part for all entities
                            if (key == "course") {
                                var valueforId = { "value": $(this).children().filter(':selected').val(), "pass": true };
                                newStudent['courseId'] = valueforId;
                                var value = { "value": $(this).children().filter(':selected').text(), "pass": true };
                                newStudent['course'] = value;
                            } else {
                                var value = { "value": $(this).children().filter(':selected').val(), "pass": true };
                                newStudent[key] = value;
                            }

                            //var value = { "value": $(this).children().filter(':selected').val(), "pass": true };
                            //newStudent[key] = value;

                        } else {
                            var value = { "value": "", "pass": false };
                            newStudent[key] = value;
                        };
                    })

                    var error = false;
                    $.each(newStudent, function (key, value) {
                        if (value["pass"] == false) {
                            $form.find('.disabledItem[rel=' + key + ']').addClass("is-invalid");
                            error = true;
                        }
                        else {
                            $form.find('.disabledItem[rel=' + key + ']').removeClass("is-invalid");
                        }
                    })

                    //console.log(newStudent, error);
                    if (newStudent.password.value != newStudent.comfirmPassword.value) {
                        $form.find('.disabledItem[rel="comfirmPassword"]').addClass("is-invalid");
                    } else if ((newStudent.password.value == newStudent.comfirmPassword.value) && newStudent.id.pass == false) {
                        if ((newStudent.password.value != "") && (newStudent.comfirmPassword.value != "")) {
                            $form.find('.disabledItem[rel="comfirmPassword"]').removeClass("is-invalid");
                            //$(this).html("New");
                            //$(this).prop("disabled", true);
                            $btnDelete.prop("disabled", true);
                            $btnEdit.prop("disabled", false);
                            $form.find('.disabledItem').each(function () {
                                $(this).prop("disabled", true);
                            })
                            Object.keys(newStudent).map(function (key, index) {
                                newStudent[key] = newStudent[key].value;
                            })

                            console.log(newStudent);
                            $spinner.prop("hidden", false);
                            createCurrentStudent(newStudent)
                        }
                    } else {
                        console.log('e');
                    }
                }
            })

            $btnSearch.on("click", function (e) {
                e.preventDefault();
                var inputValue = $(this).parent().siblings().first().val().trim();
                console.log(inputValue);
                if (inputValue != "") {
                    $.ajax({
                        type: "GET",
                        url: "https://localhost:44380/api/v1/students/" + inputValue,
                        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },
                        contentType: "application/json",
                        dataType: "json",
                        success: function (data) {
                            console.log(data);
                            data.loopID = 1;
                            $studentsTable.empty();

                            var dataElement = tableList(data, courseOptions);
                            $studentsTable.append(dataElement);

                            $studentsTable.find("input[type='checkbox']").on('click', function () {
                                if ($(this).prop("checked")) {
                                    if ($("input[type='checkbox']:checked").length == 1) {
                                        $btnView.prop('disabled', false);
                                    } else {
                                        $btnView.prop('disabled', true);
                                    }
                                    $btnDeleteMulti.prop('disabled', false);
                                } else {
                                    console.log($("input[type='checkbox']:checked").length)
                                    if ($("input[type='checkbox']:checked").length == 0) {
                                        $btnDeleteMulti.prop('disabled', true);
                                        $btnView.prop('disabled', true);
                                    }
                                    else if ($("input[type='checkbox']:checked").length == 1) {
                                        $btnView.prop('disabled', false);
                                    }
                                }
                            })
                            $studentsTable.find('.save').on("click", function (e) {
                                e.preventDefault();
                                var $inputDiv = $(this).parent().parent();
                                var $inputElement = $(this).parent().siblings().first();
                                $inputDiv.prop('hidden', true);
                                $(this).parent().parent().siblings().first().prop('hidden', false);
                                var inputValue = "";
                                if ($inputElement.prop('tagName') == "SELECT") {
                                    inputValue = $inputElement.children().filter(':selected').val()
                                } else {
                                    inputValue = $inputElement.val();
                                }
                                if (inputValue != "") {
                                    if ($inputElement.prop('tagName') == "SELECT") {
                                        $inputDiv.siblings().first().html($inputElement.children().filter(':selected').text());
                                    } else {
                                        $inputDiv.siblings().first().html(inputValue);
                                    }
                                    var result = findContentById($inputDiv.parent().parent().data("id"));

                                    console.log(result)
                                    if ($inputElement.attr('rel') == 'name') {
                                        var names = inputValue.split(' ');
                                        result.firstName = names[0];
                                        if (names[1] == undefined) { result.lastName = "" } else { result.lastName = names[1] };
                                    } else {
                                        var relValue = $inputElement.attr('rel');
                                        if (relValue == "course") {
                                            result.courseId = inputValue.trim();
                                            result.course = $inputElement.children().filter(':selected').text();
                                        } else {
                                            result[relValue] = inputValue.trim();
                                        }
                                    }
                                    console.log(result)
                                    updateCurrentStudent(result)
                                }
                            })

                            $studentsTable.find('.remodify').on("click", function (e) {
                                e.preventDefault();
                                if ($(this).attr("rel") != "inputDiv") {
                                    $(this).prop('hidden', true);
                                    $(this).siblings().first().prop('hidden', false);
                                }
                            })

                        },
                        error: function (data) {
                            $studentsTable.empty();
                            alert("No Match")
                        }
                    });
                } else {
                    $studentsTable.empty();
                    loadData();
                }

            })

            $('#btnLogout').on('click', function () {
                localStorage.removeItem('token');
                window.location.replace("https://localhost:5001/Login");
            })
        });
    </script>
</body>

</html>
